{"version":3,"sources":["components/home/Nav/Nav.jsx","containers/home/NavContainer/NavContainer.jsx","components/styled/CancelBtn.jsx","components/home/TodoListAddCard/TodoListAddCard.jsx","containers/home/TodoListAddCardContainer/TodoListAddCardContainer.jsx","redux/actions/todos.js","components/home/TodoItem/TodoItem.jsx","containers/home/TodoItemContainer/TodoItemContainer.jsx","components/home/TodoListCard/TodoListCard.jsx","containers/home/TodoListCardContainer/TodoListCardContainer.jsx","components/home/Home.jsx","containers/home/HomeContainer.jsx","components/PrivateRoute.jsx","components/authentification/Login.jsx","containers/authentification/LoginContainer.jsx","utils/checkIAuthenticated.js","redux/actions/auth.js","App.jsx","serviceWorker.js","redux/reducers/auth.js","utils/generateId.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","container","padding","avatar","backgroundColor","deepPurple","Nav","login","classes","Paper","className","Grid","direction","justify","alignItems","Avatar","toUpperCase","NavContainer","localStorage","getItem","icon","fontSize","color","StyledBtn","withStyles","root","minWidth","maxWidth","minHeight","maxHeight","textAlign","deepOrange","Button","CancelBtn","props","display","justifyContent","cursor","form","margin","btn","width","buttons","marginTop","submitBtn","marginRight","TodoListAddCard","addingTodoList","toggleAdding","onSubmit","name","onNameChange","onAddTodoListCancel","Card","label","value","onChange","autoFocus","type","variant","onClick","TodoListAddCardContainer","React","useState","setAdding","setName","dispatch","useDispatch","e","target","preventDefault","createTodoListActionCreator","DeleteBtn","TodoItem","content","isChecked","toggleChecked","onTodoItemDelete","Checkbox","checked","inputProps","TodoItemContainer","todoListId","id","todoId","toggleTodoActionCreator","deleteTodoActionCreator","flexFlow","cardTitle","borderBottom","lineHeight","fontWeight","addBtn","textTransform","addTodoForm","TodoListCard","isEditing","toggleEditing","onNameKeyDown","todos","addingTodo","todoItemContent","onTodoItemContentChange","onAddTodoItemCancel","onBlur","onKeyDown","map","todo","key","varitant","TodoListCardContainer","setEditing","setTodoItemContent","changeTodoListNameActionCreator","keyCode","which","height","Home","todoLists","HomeContainer","useSelector","todosReducer","PrivateRoute","rest","isAuthenticated","render","to","theme","paper","spacing","flexDirection","palette","secondary","main","submit","Login","onLoginChange","Container","component","CssBaseline","Typography","noValidate","required","fullWidth","autoComplete","withRouter","history","authReducer","setItem","push","changeLoginActionCreator","App","exact","path","LoginContainer","Boolean","window","location","hostname","match","initialState","generateId","Math","random","toString","substr","rootReducer","combineReducers","state","action","todoList","filter","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ec824e8.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { deepPurple } from '@material-ui/core/colors';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    padding: '10px 15px',\n  },\n  avatar: {\n    backgroundColor: deepPurple,\n  },\n}));\n\n\n// eslint-disable-next-line react/prop-types\nconst Nav = ({ login }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.container}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <div>\n          <Avatar className={classes.avatar}>\n            {' '}\n            {login[0].toUpperCase()}\n            {' '}\n          </Avatar>\n        </div>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Nav from '../../../components/home/Nav/Nav';\n\nconst NavContainer = () => {\n  const login = localStorage.getItem('user');\n\n  return (\n    <Nav login={login} />\n  );\n};\n\nexport default NavContainer;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepOrange } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    fontSize: '22px',\n    color: '#fff',\n  },\n}));\n\nconst StyledBtn = withStyles(() => ({\n  root: {\n    minWidth: '36px',\n    maxWidth: '36px',\n    minHeight: '36px',\n    maxHeight: '36px',\n    textAlign: 'center',\n    backgroundColor: deepOrange[500],\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: deepOrange[600],\n    },\n  },\n}))(Button);\n\nconst CancelBtn = (props) => {\n  const classes = useStyles();\n\n  return (\n    <StyledBtn {...props}>\n      <CloseIcon className={classes.icon} />\n    </StyledBtn>\n  );\n};\n\nexport default CancelBtn;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport Button from '@material-ui/core/Button';\nimport CancelBtn from '../../styled/CancelBtn';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '300px',\n    cursor: 'pointer',\n  },\n  form: {\n    margin: '10px 15px',\n  },\n  btn: {\n    width: '100%',\n  },\n  icon: {\n    fontSize: '40px',\n    cursor: 'pointer',\n  },\n  buttons: {\n    marginTop: '15px',\n  },\n  submitBtn: {\n    marginRight: '10px',\n  },\n}));\n\n// eslint-disable-next-line react/prop-types,max-len\nconst TodoListAddCard = ({\n  addingTodoList, toggleAdding, onSubmit, name, onNameChange, onAddTodoListCancel,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.container}>\n\n        {addingTodoList ? (\n          <form className={classes.form} onSubmit={onSubmit}>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n              <TextField\n                label=\"To Do List Name\"\n                value={name}\n                onChange={onNameChange}\n                autoFocus\n              />\n\n              <Grid className={classes.buttons} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                <Button\n                  className={classes.submitBtn}\n                  type=\"submit\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                >\n                  {' '}\n                  Submit\n                </Button>\n                <CancelBtn onClick={onAddTodoListCancel} />\n              </Grid>\n            </Grid>\n          </form>\n        ) : (\n          <Button className={classes.btn} onClick={toggleAdding}>\n            <AddOutlinedIcon className={classes.icon} />\n          </Button>\n        )}\n      </Card>\n    </>\n  );\n};\n\nexport default TodoListAddCard;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport TodoListAddCard from '../../../components/home/TodoListAddCard/TodoListAddCard';\n\n// actions\nimport { createTodoListActionCreator } from '../../../redux/actions/todos';\n\n\nconst TodoListAddCardContainer = () => {\n  const [addingTodoList, setAdding] = React.useState(false);\n  const [name, setName] = React.useState('');\n  const dispatch = useDispatch();\n\n  const toggleAdding = () => {\n    setAdding(!addingTodoList);\n  };\n\n  const handleAddTodoListCancel = () => {\n    setName('');\n    toggleAdding();\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(createTodoListActionCreator(name));\n\n    setName('');\n    toggleAdding();\n  };\n\n  return (\n    <TodoListAddCard\n      addingTodoList={addingTodoList}\n      toggleAdding={toggleAdding}\n      name={name}\n      onNameChange={handleNameChange}\n      onAddTodoListCancel={handleAddTodoListCancel}\n      onSubmit={handleSubmit}\n    />\n  );\n};\n\nexport default TodoListAddCardContainer;\n","export const CREATE_TODO_LIST = 'CREATE_TODO_LIST';\nexport const CHANGE_TODO_LIST_NAME = 'CHANGE_TODO_LIST_NAME';\nexport const DELETE_TODO_LIST = 'DELETE_TODO_LIST';\nexport const CREATE_TODO = 'CREATE_TODO';\nexport const CHANGE_TODO = 'CHANGE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\n\nexport const createTodoListActionCreator = (name) => ({\n  type: CREATE_TODO_LIST,\n  name,\n});\n\nexport const changeTodoListNameActionCreator = (id, name) => ({\n  type: CHANGE_TODO_LIST_NAME,\n  id,\n  name,\n});\n\nexport const deleteTodoListActionCreator = (id) => ({\n  type: DELETE_TODO_LIST,\n  id,\n});\n\nexport const createTodoActionCreator = (todoListId, content) => ({\n  type: CREATE_TODO,\n  todoListId,\n  content,\n});\n\nexport const changeTodoActionCreator = (todoListId, todoId, content) => ({\n  type: CHANGE_TODO,\n  todoListId,\n  todoId,\n  content,\n});\n\nexport const toggleTodoActionCreator = (todoListId, todoId) => ({\n  type: TOGGLE_TODO,\n  todoListId,\n  todoId,\n});\n\nexport const deleteTodoActionCreator = (todoListId, todoId) => ({\n  type: DELETE_TODO,\n  todoListId,\n  todoId,\n});\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CancelBtn from '../../styled/CancelBtn';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    padding: '0 15px',\n  },\n}));\n\nconst DeleteBtn = withStyles(() => ({\n  root: {\n    minWidth: '21px',\n    maxWidth: '21px',\n    minHeight: '21px',\n    maxHeight: '21px',\n    '& svg': {\n      fontSize: '12px',\n    },\n  },\n}))(CancelBtn);\n\n// eslint-disable-next-line react/prop-types\nconst TodoItem = ({ content, isChecked, toggleChecked, onTodoItemDelete, }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.container} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n      <div>\n        {content}\n      </div>\n\n      <div>\n        <Checkbox\n          checked={isChecked}\n          onChange={toggleChecked}\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n        <DeleteBtn onClick={onTodoItemDelete} />\n      </div>\n    </Grid>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport TodoItem from '../../../components/home/TodoItem/TodoItem';\nimport { toggleTodoActionCreator, deleteTodoActionCreator } from '../../../redux/actions/todos';\n\n// eslint-disable-next-line react/prop-types\nconst TodoItemContainer = ({\n  todoListId, id, content, isChecked,\n}) => {\n  const dispatch = useDispatch();\n\n  const toggleChecked = () => {\n    dispatch(toggleTodoActionCreator(todoListId, id));\n  };\n\n  const handleTodoItemDelete = () => {\n    dispatch(deleteTodoActionCreator(todoListId, id));\n  };\n\n  return (\n    <TodoItem\n      content={content}\n      isChecked={isChecked}\n      toggleChecked={toggleChecked}\n      onTodoItemDelete={handleTodoItemDelete}\n    />\n  );\n};\n\nexport default TodoItemContainer;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport CancelBtn from '../../styled/CancelBtn';\nimport TodoItemContainer from '../../../containers/home/TodoItemContainer/TodoItemContainer';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '300px',\n    margin: '0 15px',\n  },\n  cardTitle: {\n    width: '100%',\n    padding: '10px 0',\n    backgroundColor: '#e0e0e0',\n    borderBottom: '1px solid gray',\n    fontSize: '20px',\n    lineHeight: '24px',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    cursor: 'pointer',\n  },\n  addBtn: {\n    width: '100%',\n    fontSize: '18px',\n    textTransform: 'capitalize',\n  },\n  addTodoForm: {\n    margin: '10px 15px',\n  },\n  buttons: {\n    marginTop: '15px',\n  },\n  submitBtn: {\n    marginRight: '10px',\n  },\n}));\n\nconst TodoListCard = ({\n  id,\n  onSubmit,\n  name,\n  onNameChange,\n  isEditing,\n  toggleEditing,\n  onNameKeyDown,\n  todos,\n  addingTodo,\n  toggleAdding,\n  todoItemContent,\n  onTodoItemContentChange,\n  onAddTodoItemCancel,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.container}>\n      {isEditing ? (\n        <TextField\n          value={name}\n          onChange={onNameChange}\n          onBlur={toggleEditing}\n          onKeyDown={onNameKeyDown}\n          autoFocus\n        />\n      ) : (\n        <div className={classes.cardTitle} onClick={toggleEditing}>\n          {' '}\n          {name}\n          {' '}\n        </div>\n      )}\n\n      {todos.map((todo) => <TodoItemContainer key={todo.id} todoListId={id} {...todo} />)}\n\n      {addingTodo ? (\n        <form className={classes.addTodoForm} onSubmit={onSubmit}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n            <TextField\n              label=\"To Do Item Content\"\n              varitant=\"outlined\"\n              value={todoItemContent}\n              onChange={onTodoItemContentChange}\n              autoFocus\n            />\n\n            <Grid className={classes.buttons} container direction=\"row\" justify=\"flex-start\">\n              <Button\n                className={classes.submitBtn}\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n              >\n                Submit\n              </Button>\n              <CancelBtn onClick={onAddTodoItemCancel} />\n            </Grid>\n          </Grid>\n        </form>\n      ) : (\n        <Button className={classes.addBtn} variant=\"outlined\" color=\"default\" onClick={toggleAdding}>\n          <AddOutlinedIcon className={classes.icon} />\n\n          Add todo item\n        </Button>\n      )}\n    </Card>\n  );\n};\n\nexport default TodoListCard;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport TodoListCard from '../../../components/home/TodoListCard/TodoListCard';\nimport { changeTodoListNameActionCreator, createTodoActionCreator } from '../../../redux/actions/todos';\n\n// eslint-disable-next-line react/prop-types\nconst TodoListCardContainer = ({ id, name, todos }) => {\n  const [isEditing, setEditing] = React.useState(false);\n  const [addingTodo, setAdding] = React.useState(false);\n  const [todoItemContent, setTodoItemContent] = React.useState('');\n  const dispatch = useDispatch();\n\n  const toggleEditing = () => {\n    setEditing(!isEditing);\n  };\n\n  const toggleAdding = () => {\n    setAdding(!addingTodo);\n  };\n\n  const handleTodoItemContentChange = (e) => {\n    setTodoItemContent(e.target.value);\n  };\n\n  const handleAddTodoItemCancel = () => {\n    setTodoItemContent('');\n    toggleAdding();\n  };\n\n  const handleNameChange = (e) => {\n    dispatch(changeTodoListNameActionCreator(id, e.target.value));\n  };\n\n  const handleNameKeyDown = (e) => {\n    if (e.keyCode === 13 || e.which === 13) {\n      toggleEditing();\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(createTodoActionCreator(id, todoItemContent));\n    setTodoItemContent('');\n    toggleAdding();\n  };\n\n  return (\n    <TodoListCard\n      id={id}\n      onSubmit={handleSubmit}\n      todos={todos}\n      name={name}\n      onNameChange={handleNameChange}\n      isEditing={isEditing}\n      toggleEditing={toggleEditing}\n      onNameKeyDown={handleNameKeyDown}\n      addingTodo={addingTodo}\n      toggleAdding={toggleAdding}\n      todoItemContent={todoItemContent}\n      onTodoItemContentChange={handleTodoItemContentChange}\n      onAddTodoItemCancel={handleAddTodoItemCancel}\n    />\n  );\n};\n\nexport default TodoListCardContainer;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavContainer from '../../containers/home/NavContainer/NavContainer';\nimport TodoListAddCardContainer from '../../containers/home/TodoListAddCardContainer/TodoListAddCardContainer';\n\nimport TodoListCardContainer from '../../containers/home/TodoListCardContainer/TodoListCardContainer';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n\t    padding: '20px 15px',\n  },\n}));\n\n\nconst Home = ({ todoLists }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <NavContainer />\n      <Grid className={classes.content} container direction=\"row\" alignItems=\"flex-start\">\n        {todoLists.map((todo) => <TodoListCardContainer key={todo.id} {...todo} />)}\n\n        <TodoListAddCardContainer />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Home from '../../components/home/Home';\n\nconst HomeContainer = () => {\n  const todoLists = useSelector(({ todosReducer }) => todosReducer.todoLists);\n\n  return (\n    <Home todoLists={todoLists} />\n  );\n};\n\nexport default HomeContainer;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\nimport HomeContainer from '../containers/home/HomeContainer';\n\n// eslint-disable-next-line react/prop-types\nconst PrivateRoute = ({ rest }) => {\n  const isAuthenticated = localStorage.getItem('user') === 'main';\n\n  return (\n    <Route\n      {...rest}\n      render={() => (\n        <>\n          {isAuthenticated ? (\n            <HomeContainer />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </>\n      )}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n// eslint-disable-next-line react/prop-types\nconst Login = ({ onSubmit, login, onLoginChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Login\"\n            autoComplete=\"login\"\n            autoFocus\n            value={login}\n            onChange={onLoginChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Login from '../../components/authentification/Login';\nimport { checkAuthenticated } from '../../utils/checkIAuthenticated';\n\n// actions\nimport { changeLoginActionCreator, submitLoginActionCreator } from '../../redux/actions/auth';\n\n// eslint-disable-next-line react/prop-types\nconst LoginContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const login = useSelector(({ authReducer }) => authReducer.login);\n  const isAuthenticated = checkAuthenticated();\n\n  const changeLogin = (e) => {\n    dispatch(changeLoginActionCreator(e.target.value));\n  };\n\n  const submitLogin = () => {\n    dispatch(submitLoginActionCreator());\n\n    if (login === 'main') {\n      localStorage.setItem('user', login);\n      history.push('/home');\n    }\n  };\n\n  return (\n    <>\n      {isAuthenticated\n        ? <Redirect to=\"/home\" />\n        : (\n          <Login\n            onSubmit={submitLogin}\n            login={login}\n            onLoginChange={changeLogin}\n          />\n        )}\n    </>\n  );\n};\n\nexport default withRouter(LoginContainer);\n","export const checkAuthenticated = () => localStorage.getItem('user') === 'main';\n","export const CHANGE_LOGIN = 'CHANGE_LOGIN';\nexport const SUBMIT_LOGIN = 'SUBMIT_LOGIN';\n\nexport const changeLoginActionCreator = (login) => ({\n  type: CHANGE_LOGIN,\n  login,\n});\n\nexport const submitLoginActionCreator = () => ({\n  type: SUBMIT_LOGIN,\n});\n","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter, Route, Redirect, Switch,\n} from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport LoginContainer from './containers/authentification/LoginContainer';\nimport HomeContainer from './containers/home/HomeContainer';\n\nconst App = () => (\n  <HashRouter>\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <Redirect to=\"/login\" />\n        )}\n      />\n      <Route exact path=\"/login\" component={LoginContainer} />\n\n      <PrivateRoute exact path=\"/home\" component={HomeContainer} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {CHANGE_LOGIN} from \"../actions/auth\";\r\nimport {SUBMIT_LOGIN} from \"../actions/auth\";\r\n\r\nconst initialState = {\r\n    login: '',\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LOGIN:\r\n            return {\r\n                ...state,\r\n                login: action.login,\r\n            };\r\n        case SUBMIT_LOGIN:\r\n            return state;\r\n        default:\r\n            return initialState;\r\n    }\r\n};\r\n","export const generateId = () => `_${Math.random().toString(36).substr(2, 9)}`;\n","import {\r\n    CREATE_TODO_LIST,\r\n    CHANGE_TODO_LIST_NAME,\r\n    DELETE_TODO_LIST,\r\n    CREATE_TODO,\r\n    CHANGE_TODO,\r\n    TOGGLE_TODO,\r\n    DELETE_TODO,\r\n} from \"../actions/todos\";\r\nimport {generateId} from \"../../utils/generateId\";\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n};\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [\r\n                    ...state.todoLists,\r\n                    {\r\n                        id: generateId(),\r\n                        name: action.name,\r\n                        todos: [],\r\n                    }\r\n                ],\r\n            };\r\n        case CHANGE_TODO_LIST_NAME:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.id) {\r\n                        return {\r\n                            ...todoList,\r\n                            name: action.name,\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                }),\r\n            };\r\n        case DELETE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter((todoList) => todoList.id !== action.id),\r\n            };\r\n        case CREATE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: [\r\n                                ...todoList.todos,\r\n                                {\r\n                                    id: generateId(),\r\n                                    content: action.content,\r\n                                    isChecked: false,\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                }),\r\n            };\r\n        case CHANGE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.map((todo) => {\r\n                                if (todo.id === action.todoId) {\r\n                                    return {\r\n                                        ...todo,\r\n                                        content: action.content,\r\n                                    };\r\n                                }\r\n\r\n                                return todo;\r\n                            }),\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        case TOGGLE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.map((todo) => {\r\n                                if (todo.id === action.todoId) {\r\n                                    return {\r\n                                        ...todo,\r\n                                        isChecked: !todo.isChecked,\r\n                                    };\r\n                                }\r\n\r\n                                return todo;\r\n                            }),\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.filter((todo) => todo.id !== action.todoId)\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\nimport { authReducer } from './auth';\nimport { todosReducer } from './todos';\n\nexport const rootReducer = combineReducers({ authReducer, todosReducer });\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}