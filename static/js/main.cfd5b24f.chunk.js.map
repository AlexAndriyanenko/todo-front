{"version":3,"sources":["components/home/Nav/Nav.js","containers/home/NavContainer/NavContainer.js","components/home/TodoListAddCard/TodoListAddCard.js","components/home/TodoListAddModal/TodoListAddModal.js","containers/home/TodoListAddCardContainer/TodoListAddCardContainer.js","redux/actions/todos.js","components/home/TodoListCard/TodoListCard.js","containers/home/TodoListCardContainer/TodoListCardContainer.js","components/home/Home.jsx","containers/home/HomeContainer.js","components/PrivateRoute.jsx","components/authentification/Login.jsx","containers/authentification/LoginContainer.jsx","components/utils/checkIAuthenticated.js","redux/actions/auth.js","App.jsx","serviceWorker.js","redux/reducers/auth.js","utils/generateId.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","container","padding","avatar","backgroundColor","deepPurple","Nav","login","classes","Paper","className","Grid","direction","justify","alignItems","Avatar","toUpperCase","NavContainer","localStorage","getItem","display","justifyContent","minWidth","minHeight","cursor","transition","icon","fontSize","TodoListAddCard","onClick","Card","modal","paper","button","maxWidth","marginTop","TodoListAddModal","isOpened","onClose","onSubmit","name","onNameChange","Modal","open","TextField","variant","label","value","onChange","Button","type","color","TodoListAddCardContainer","React","useState","opened","setOpened","setName","dispatch","useDispatch","todoListName","e","target","preventDefault","createTodoListActionCreator","margin","TodoListCard","TodoListCardContainer","width","height","content","Home","todoLists","map","todo","key","id","HomeContainer","useSelector","todosReducer","PrivateRoute","component","rest","isAuthenticated","render","to","theme","spacing","flexDirection","palette","secondary","main","form","submit","Login","onLoginChange","Container","CssBaseline","Typography","noValidate","required","fullWidth","autoComplete","autoFocus","withRouter","history","authReducer","setItem","push","changeLoginActionCreator","App","createHashHistory","basename","process","exact","path","LoginContainer","Boolean","window","location","hostname","match","initialState","generateId","Math","random","toString","substr","rootReducer","combineReducers","state","action","todos","todoList","filter","todoListId","isChecked","todoId","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cfd5b24f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: '10px 15px',\r\n    },\r\n    avatar: {\r\n      backgroundColor: deepPurple,\r\n    },\r\n}));\r\n\r\n\r\nconst Nav = ({ login }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <div>\r\n                    <Avatar className={classes.avatar}> {login[0].toUpperCase()} </Avatar>\r\n                </div>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Nav from '../../../components/home/Nav/Nav';\r\n\r\nconst NavContainer = () => {\r\n    const login = localStorage.getItem('user');\r\n\r\n    return (\r\n        <Nav login={login} />\r\n    )\r\n};\r\n\r\nexport default NavContainer;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '200px',\r\n        minHeight: '250px',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#e0e0e0',\r\n            transition: 'all 0.3s',\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: '60px',\r\n    },\r\n}));\r\n\r\nconst TodoListAddCard = ({ onClick }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.container} onClick={onClick}>\r\n            <AddOutlinedIcon className={classes.icon}/>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default TodoListAddCard;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        minWidth: '300px',\r\n        minHeight: '150px',\r\n        padding: '15px 10px',\r\n    },\r\n    button: {\r\n        maxWidth: '70px',\r\n        marginTop: '20px',\r\n    }\r\n}));\r\n\r\nconst TodoListAddModal = ({isOpened, onClose, onSubmit, name, onNameChange}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Modal className={classes.modal} open={isOpened} onClose={onClose}>\r\n            <Paper className={classes.paper}>\r\n                <form onSubmit={onSubmit}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            label=\"To Do List Name\"\r\n                            value={name}\r\n                            onChange={onNameChange}\r\n                        />\r\n\r\n                        <Button className={classes.button} type=\"submit\" variant=\"outlined\"\r\n                                color=\"primary\"> Submit </Button>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default TodoListAddModal;\r\n","import React from 'react';\r\nimport TodoListAddCard from \"../../../components/home/TodoListAddCard/TodoListAddCard\";\r\nimport TodoListAddModal from \"../../../components/home/TodoListAddModal/TodoListAddModal\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// actions\r\nimport { createTodoListActionCreator } from \"../../../redux/actions/todos\";\r\n\r\n\r\nconst TodoListAddCardContainer = () => {\r\n    const [opened, setOpened] = React.useState(false);\r\n    const [name, setName] = React.useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCardClick = () => {\r\n        setOpened(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setOpened(false);\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createTodoListActionCreator(name));\r\n\r\n        setName('');\r\n        setOpened(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TodoListAddCard onClick={handleCardClick} />\r\n\r\n            <TodoListAddModal\r\n                isOpened={opened}\r\n                onClose={handleModalClose}\r\n                todoListName={name}\r\n                onNameChange={handleNameChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoListAddCardContainer;\r\n","export const CREATE_TODO_LIST = 'CREATE_TODO_LIST';\r\nexport const CHANGE_TODO_LIST_NAME = 'CHANGE_TODO_LIST_NAME';\r\nexport const DELETE_TODO_LIST = 'DELETE_TODO_LIST';\r\nexport const CREATE_TODO = 'CREATE_TODO';\r\nexport const CHANGE_TODO = 'CHANGE_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\n\r\nexport const createTodoListActionCreator = (name) => ({\r\n    type: CREATE_TODO_LIST,\r\n    name,\r\n});\r\n\r\nexport const changeTodoListNameActionCreator = (id, name) => ({\r\n    type: CHANGE_TODO_LIST_NAME,\r\n    id,\r\n    name,\r\n});\r\n\r\nexport const deleteTodoListActionCreator = (id) => ({\r\n    type: DELETE_TODO_LIST,\r\n    id,\r\n});\r\n\r\nexport const createTodoActionCreator = (todoListId, content) => ({\r\n    type: CREATE_TODO,\r\n    todoListId,\r\n    content,\r\n});\r\n\r\nexport const changeTodoActionCreator = (todoListId, todoId, content) => ({\r\n    type: CHANGE_TODO,\r\n    todoListId,\r\n    todoId,\r\n    content,\r\n});\r\n\r\nexport const toggleTodoActionCreator = (todoListId, todoId) => ({\r\n    type: TOGGLE_TODO,\r\n    todoListId,\r\n    todoId,\r\n});\r\n\r\nexport const deleteTodoActionCreator = (todoListId, todoId) => ({\r\n    type: DELETE_TODO,\r\n    todoListId,\r\n    todoId,\r\n});\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '200px',\r\n        minHeight: '250px',\r\n        margin: '0 15px',\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\nconst TodoListCard = ({ name }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.container}>\r\n            <div> { name } </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TodoListCard;\r\n","import React from 'react';\r\nimport TodoListCard from \"../../../components/home/TodoListCard/TodoListCard\";\r\n\r\nconst TodoListCardContainer = ({ name }) => {\r\n    return (\r\n        <TodoListCard\r\n            name={name}\r\n        />\r\n    )\r\n};\r\n\r\nexport default TodoListCardContainer;\r\n","import React from 'react';\r\nimport NavContainer from \"../../containers/home/NavContainer/NavContainer\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TodoListAddCardContainer from \"../../containers/home/TodoListAddCardContainer/TodoListAddCardContainer\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TodoListCardContainer from \"../../containers/home/TodoListCardContainer/TodoListCardContainer\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tcontainer: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t},\r\n    content: {\r\n\t    padding: '20px 15px',\r\n    }\r\n}));\r\n\r\n\r\nconst Home = ({ todoLists }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.container}>\r\n\t\t\t<NavContainer />\r\n\t\t\t<Grid className={classes.content} container direction=\"row\" alignItems=\"center\">\r\n                {todoLists.map((todo) => <TodoListCardContainer key={todo.id} {...todo} />)}\r\n\r\n                <TodoListAddCardContainer />\r\n            </Grid>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from '../../components/home/Home';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst HomeContainer = () => {\r\n    const todoLists = useSelector(({ todosReducer }) => todosReducer.todoLists);\r\n\r\n    return (\r\n        <Home todoLists={todoLists} />\r\n    )\r\n};\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router';\r\nimport HomeContainer from \"../containers/home/HomeContainer\";\r\n\r\nconst PrivateRoute = ({component, ...rest}) => {\r\n    const isAuthenticated = localStorage.getItem('user') === 'main';\r\n\r\n    return (\r\n        <Route {...rest} render={() => (\r\n            <>\r\n                {isAuthenticated ? (\r\n                    <HomeContainer />\r\n                ) : (\r\n                    <Redirect to=\"/login\"/>\r\n                )}\r\n            </>\r\n        )}/>\r\n    )\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = ({ onSubmit, login, onLoginChange }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Login\"\r\n                        autoComplete=\"login\"\r\n                        autoFocus\r\n                        value={login}\r\n                        onChange={onLoginChange}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from \"../../components/authentification/Login\";\r\nimport {withRouter} from \"react-router\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {checkAuthenticated} from \"../../components/utils/checkIAuthenticated\";\r\n\r\n// actions\r\nimport {changeLoginActionCreator, submitLoginActionCreator} from \"../../redux/actions/auth\";\r\n\r\nconst LoginContainer = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const login = useSelector(({authReducer}) => authReducer.login);\r\n    const isAuthenticated = checkAuthenticated();\r\n\r\n    const changeLogin = (e) => {\r\n        dispatch(changeLoginActionCreator(e.target.value));\r\n    };\r\n\r\n    const submitLogin = () => {\r\n        dispatch(submitLoginActionCreator());\r\n\r\n        if (login === 'main') {\r\n            localStorage.setItem('user', login);\r\n            history.push('/home');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isAuthenticated ?\r\n                <Redirect to=\"/home\"/>\r\n                : (\r\n                    <Login\r\n                        history={history}\r\n                        onSubmit={submitLogin}\r\n                        login={login}\r\n                        onLoginChange={changeLogin}\r\n                    />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withRouter(LoginContainer);\r\n","export const checkAuthenticated = () => {\r\n    return localStorage.getItem('user') === 'main';\r\n};\r\n","export const CHANGE_LOGIN = 'CHANGE_LOGIN';\r\nexport const SUBMIT_LOGIN = 'SUBMIT_LOGIN';\r\n\r\nexport const changeLoginActionCreator = (login) => ({\r\n   type: CHANGE_LOGIN,\r\n   login,\r\n});\r\n\r\nexport const submitLoginActionCreator = () => ({\r\n   type: SUBMIT_LOGIN,\r\n});\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { createHashHistory  } from 'history';\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport LoginContainer from \"./containers/authentification/LoginContainer\";\nimport HomeContainer from \"./containers/home/HomeContainer\";\n\nconst App = () => {\n    const history = createHashHistory ({\n        basename: process.env.PUBLIC_URL,\n    });\n\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<Switch>\n                <Route exact path=\"/\"  render={() => (\n                    <Redirect to=\"/login\" />\n                )}/>\n                <Route exact path=\"/login\" component={LoginContainer} />\n\n\t\t\t\t<PrivateRoute exact path=\"/home\" component={<HomeContainer />} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_LOGIN } from \"../actions/auth\";\r\nimport { SUBMIT_LOGIN } from \"../actions/auth\";\r\n\r\nconst initialState = {\r\n    login: '',\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n      switch(action.type) {\r\n          case CHANGE_LOGIN:\r\n              return {\r\n                  ...state,\r\n                  login: action.login,\r\n              };\r\n          case SUBMIT_LOGIN:\r\n              return state;\r\n          default:\r\n              return initialState;\r\n      }\r\n};\r\n","export const generateId = function () {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n","import {\r\n    CREATE_TODO_LIST,\r\n    CHANGE_TODO_LIST_NAME,\r\n    DELETE_TODO_LIST,\r\n    CREATE_TODO,\r\n    CHANGE_TODO,\r\n    TOGGLE_TODO,\r\n    DELETE_TODO,\r\n} from \"../actions/todos\";\r\nimport { generateId } from \"../../utils/generateId\";\r\n\r\nconst initialState = {\r\n    todoLists: [],\r\n};\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CREATE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: [\r\n                    ...state.todoLists,\r\n                    {\r\n                        id: generateId(),\r\n                        name: action.name,\r\n                        todos: [],\r\n                    }\r\n                ],\r\n            };\r\n        case CHANGE_TODO_LIST_NAME:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                   if (todoList.id === action.id) {\r\n                       return {\r\n                           ...todoList,\r\n                           name: action.name,\r\n                       }\r\n                   }\r\n\r\n                   return todoList;\r\n                }),\r\n            };\r\n        case DELETE_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.filter((todoList) => todoList.id === action.id),\r\n            };\r\n        case CREATE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: [\r\n                                ...todoList.todos,\r\n                                {\r\n                                    id: generateId(),\r\n                                    content: action.content,\r\n                                    isChecked: false,\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                }),\r\n            };\r\n        case CHANGE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.map((todo) => {\r\n                                if (todo.id === action.todoId) {\r\n                                    return {\r\n                                        ...todo,\r\n                                        content: action.content,\r\n                                    };\r\n                                }\r\n\r\n                                return todo;\r\n                            }),\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        case TOGGLE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.map((todo) => {\r\n                                if (todo.id === action.todoId) {\r\n                                    return {\r\n                                        ...todo,\r\n                                        isChecked: !todo.isChecked,\r\n                                    };\r\n                                }\r\n\r\n                                return todo;\r\n                            }),\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todoLists: state.todoLists.map((todoList) => {\r\n                    if (todoList.id === action.todoListId) {\r\n                        return {\r\n                            ...todoList,\r\n                            todos: todoList.todos.filter((todo) => todo.id === action.todoId)\r\n                        }\r\n                    }\r\n\r\n                    return todoList;\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./auth\";\r\nimport { todosReducer } from \"./todos\";\r\n\r\nexport const rootReducer = combineReducers({ authReducer, todosReducer });\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}